{
  "Post list": {
    "prefix": "posting",
    "body": [
      "---",
      "title_ko: ",
      "title_en: ",
      "desc: ",
      "thumbnail_url: ",
      "metatag: ",
      "---",
      "## 들어가기 전에",
      "",
      "## 본문 1",
      "",
      "## 본문 2",
      "",
      "## 문제 발생 및 해결",
      "",
      "## 결론",
      "",
      "### 더 생각해 보기",
      "",
      "### 참고",
    ],
    "description": "Generate Post list",
  },
  "boj": {
    "prefix": "boj",
    "body": [
      "---",
      "title_ko: ",
      "title_en: ",
      "desc: ",
      "thumbnail_url: ",
      "metatag: ",
      "---",
      ">",
      "## 알고리즘 분류",
      "",
      "## 문제 설명",
      "",
      "## 풀이",
      "",
      "## 코드 - Python",
      "",
      "## 문제 발생 및 해결",
      "",
      "## 핵심",
    ],
    "description": "Generate Post list",
  },
  "newImg": {
    "prefix": "newimg",
    "body": ["<Img src=\"/posts/.webp\" width={300} alt=\"\"/>"],
    "description": "Generate new image tag",
  },
  "Make Api": {
    "prefix": "api",
    "body": [
      "export const dynamic = 'force-dynamic';",
      "const { PrismaClient } = require('@prisma/client');",
      "import { createResponse } from '@/config/apiResponse';",
      "import { NextResponse } from 'next/server';",
      "",
      "const prisma = new PrismaClient();",
      "",
      "(BigInt.prototype as any).toJSON = function () {",
      "  return this.toString();",
      "};",
      "",
      "export async function GET() {",
      "  try {",
      "    return NextResponse.json(createResponse('Post found', {}));",
      "  } catch (error) {",
      "    return NextResponse.json({ error: 'Post not found' }, { status: 405 });",
      "  }",
      "}",
    ],
  },
}
